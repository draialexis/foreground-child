{"version":3,"file":"basic.js","sourceRoot":"","sources":["basic.ts"],"names":[],"mappings":"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","sourcesContent":["import { onExit } from 'signal-exit'\nimport { fileURLToPath } from 'url'\nimport { foregroundChild, type Cleanup } from '../../dist/esm/index.js'\n\nconst __filename = fileURLToPath(import.meta.url)\n\nconst childMain = () => {\n  setTimeout(() => {}, 1000)\n  console.log('stdout')\n  switch (process.argv[3]) {\n    case 'SIGTERM':\n    case 'SIGHUP':\n    case 'SIGKILL':\n      process.kill(process.pid, process.argv[3])\n      break\n\n    case '0':\n    case '1':\n    case '2':\n      return process.exit(+process.argv[3])\n\n    case 'ipc':\n      process.on('message', m => {\n        if (!process.send) {\n          throw new Error('lost process.send somehow')\n        }\n        console.log('message received')\n        process.send(m)\n        process.exit(0)\n      })\n      break\n  }\n}\n\nconst parentMain = () => {\n  let cb: Cleanup | undefined = undefined\n\n  // we can optionally assign a beforeExit handler\n  // to the foreground-child process; we should test it.\n  switch (process.argv[4]) {\n    case 'beforeExitHandler':\n      cb = exitCode => {\n        const expectedExitCode = Number(process.argv[3])\n        if (expectedExitCode !== exitCode) {\n          console.log('unexpected exit code', expectedExitCode, exitCode)\n        }\n\n        console.log('beforeExitHandler')\n      }\n      break\n    case 'promiseExitHandler':\n      cb = async exitCode => {\n        const expectedExitCode = Number(process.argv[3])\n        if (expectedExitCode !== exitCode) {\n          console.log('unexpected exit code', expectedExitCode, exitCode)\n        }\n\n        console.log('promiseExitHandler')\n      }\n      break\n  }\n\n  const program = process.execPath\n  const args = [__filename, 'child'].concat(process.argv.slice(3))\n  const child = foregroundChild(program, args, cb)\n\n  if (process.argv[3] === 'onExit') {\n    onExit(() => console.log('parent exit'))\n    switch (process.argv[4]) {\n      case 'parent':\n        process.kill(process.pid, 'SIGTERM')\n        setTimeout(() => {}, 200)\n        break\n      case 'child':\n        process.kill(child.pid as number, 'SIGTERM')\n        setTimeout(() => {}, 200)\n        break\n      default:\n        return process.exit()\n    }\n  }\n}\n\nswitch (process.argv[2]) {\n  case 'child':\n    childMain()\n    break\n  case 'parent':\n    parentMain()\n    break\n}\n"]}